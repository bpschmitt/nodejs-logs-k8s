    [SERVICE]
        Flush         1
        Log_Level     ${LOG_LEVEL}
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0

    [INPUT]
        Name              tail
        Tag               kube.<namespace_name>.<pod_name>.<container_name>
        Tag_Regex         (?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<namespace_name>[^_]+)_(?<container_name>.+)-
        Path              ${PATH}
        Parser            ${LOG_PARSER}
        DB                ${FB_DB}
        Mem_Buf_Limit     7MB
        Skip_Long_Lines   On
        Refresh_Interval  10

    [FILTER]
        Name           kubernetes
        Match          kube...
        # We need the full DNS suffix as Windows only supports resolving names with this suffix
        # See: https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#dns-limitations
        Kube_URL       https://kubernetes.default.svc.cluster.local:443
        K8S-Logging.Exclude ${K8S_LOGGING_EXCLUDE}
        Labels         Off
        Annotations    Off

    [FILTER]
        Name           nest
        Match          *
        Operation      lift
        Nested_under   kubernetes

    [FILTER]
        Name           record_modifier
        Match          *
        Record         cluster_name ${CLUSTER_NAME}
        Allowlist_key  container_name
        Allowlist_key  namespace_name
        Allowlist_key  pod_name
        Allowlist_key  stream
        Allowlist_key  log

    [OUTPUT]
        Name           newrelic
        Match          kube.team-one.*
        licenseKey     <TEAM ONE NR LICENSE KEY>
        endpoint       ${ENDPOINT}
        lowDataMode    ${LOW_DATA_MODE}

    [OUTPUT]
        Name           newrelic
        Match          kube.team-two.*
        licenseKey     <TEAM TWO NR LICENSE KEY>
        endpoint       ${ENDPOINT}
        lowDataMode    ${LOW_DATA_MODE}

    [OUTPUT]
        Name           newrelic
        Match          *
        licenseKey     <NR LICENSE KEY>
        endpoint       ${ENDPOINT}
        lowDataMode    ${LOW_DATA_MODE}